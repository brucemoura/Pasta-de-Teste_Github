*{
  margin: 0;
  padding: 0;
  font-size: 1.3rem;
  font-family: arial;
}

a{
  text-decoration: none;
  color: white;
}

h1{
  text-align: center;
  margin-top: 100px;
}

ul li{
  list-style: none;
}

.header{
  display: flex;
  justify-content: space-between;/*ele cria espaços entre os elementos */
  padding: 20px;
  align-items: center;
  flex-wrap: wrap;/*isso significa que quando a tela ficar bem pequena um elemento vai para baixo do outro*/
  background-color: #1d1e1d;
}

.menu{
  display: flex;
}

.menu li{
  margin-left: 10px;
}

.menu li a{
  display: block;
  padding: 10px;
}

/* CSS FLEXBOX  1 */

img {
  max-width: 100%;
  display: block;
}

.flex{
  display: flex; /*vai ficar cada um do lado do outro*/
  flex-wrap: wrap;
  max-width: 800px;
  margin: 0 auto;
}

.flex > div{
  
  /*so colocar isso nao vai acontecer nada temos que indica para o flex-wrap que ele pode quebrar usando flex-wrap: wrap;*/
  flex: 1 1 200px;
  /*
  o primeiro valor significa que ele vai se expandir
  o segundo valor significa que ele pode ficar meno 
  o terceiro valor significa a base, ele sempre vai ter essa base se ele nao conseguir manter essa base ele vai quebrar
  */
  margin: 10px;
}

/* CSS GRID 1 */

.grid1{
  display: grid;
  /* podemos escrever esse codigo abaixo de um jeito mais limpo
  grid-template-columns: 1fr 1fr 1fr; o fr e unidade fracional e como se tivessimos dividindo 100% em 3 partes*/
  grid-template-columns: repeat(3, 1fr);
  max-width: 800px;
  padding: 10px;
  margin: 0 auto;
  grid-gap: 20px; /*ele e usado para dar magens/espaçamenstos entre os itens então não precisamos usar a margin*/
}

.grid1 > div:nth-child(n + 4){
  /*o :nth-child(#) vai servir para voce enumerar os filhos de grid nesse caso ou seja se ele tiver 5 filhos(com a mesma tag) vamos selecionar so o primeiro*/
  /*dentro do () podemos usar uma formula (n + 4) essa formula significa que apartir do 4 item ele vai adicionar o estilo que voce colocou, então ele vai adicionar do 4º item pra frente */
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 10px;
  align-items: center;
}

.grid1 > div.anuncio{
  grid-column: 1;
  grid-row: 2 / 5 ;
  display: block;
}

@media (max-width: 600px) {
  .grid1 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid1 > div:nth-child(n + 4){
    display: block;
  }

  .grid1 > div.anuncio{
    grid-column: auto;
    grid-row: auto;
    order: -1;
  }
}

/*CSS GRID 2*/

.grid2{
  display: grid;
  grid-template-columns: 1fr 200px;
  grid-gap: 20px;
  max-width: 800px;
  padding: 10px;
  margin: 0 auto;
}

.sidebar > div{
  margin-bottom: 10px;
}

@media (max-width: 600px){
  .grid2{
    grid-template-columns: 1fr;
  }
  .sidebar{
    display: flex;
    overflow-x: scroll;
  }

  .sidebar > div{
    flex: 1 0 200px;
    margin: 0 10px;
  }
}


/*CSS GRID 3*/
.grid3{
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 20px;
  margin: 0 auto;
  max-width: 800px;
  padding: 10px;
}

.item1:nth-child(1){
  grid-row: 1/3;
}

.item1{
  display: grid;
}

.item1 img{
  grid-column: 1;
  grid-row: 1/3 ;
  align-self: end;
}

.item1 p{
  background-color: rgba(0, 0, 0, 0.3);
  padding: 10px;
  color: white;
  grid-column: 1;
  grid-row: 2;
  align-self: end;
}